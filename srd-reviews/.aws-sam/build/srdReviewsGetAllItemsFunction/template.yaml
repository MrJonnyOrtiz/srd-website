AWSTemplateFormatVersion: 2010-09-09
Description: >-
   srd-reviews

Transform:
   - AWS::Serverless-2016-10-31

Resources:
   # Each Lambda function is defined by properties:
   # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

   # This is a Lambda function config associated with the source code: get-all-items.js
   srdReviewsGetAllItemsFunction:
      Type: AWS::Serverless::Function
      Properties:
         Handler: src/handlers/srd-reviews-get-all-items.getAllItemsHandler
         Runtime: nodejs16.x
         Architectures:
            - x86_64
         MemorySize: 128
         Timeout: 100
         Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
         Policies:
            # Give Create/Read/Update/Delete Permissions to the ReviewsTable
            - DynamoDBCrudPolicy:
                 TableName: !Ref ReviewsTable
         Environment:
            Variables:
               # Make table name accessible as environment variable from function code during execution
               SAMPLE_TABLE: !Ref ReviewsTable
         Events:
            Api:
               Type: Api
               Properties:
                  Path: /
                  Method: GET
   # Each Lambda function is defined by properties:
   # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

   # This is a Lambda function config associated with the source code: get-by-id.js
   srdReviewsGetByIdFunction:
      Type: AWS::Serverless::Function
      Properties:
         Handler: src/handlers/srd-reviews-get-by-id.getByIdHandler
         Runtime: nodejs16.x
         Architectures:
            - x86_64
         MemorySize: 128
         Timeout: 100
         Description: A simple example includes a HTTP get method to get one item by id from a DynamoDB table.
         Policies:
            # Give Create/Read/Update/Delete Permissions to the ReviewsTable
            - DynamoDBCrudPolicy:
                 TableName: !Ref ReviewsTable
         Environment:
            Variables:
               # Make table name accessible as environment variable from function code during execution
               SAMPLE_TABLE: !Ref ReviewsTable
         Events:
            Api:
               Type: Api
               Properties:
                  Path: /{id}
                  Method: GET
   # Each Lambda function is defined by properties:
   # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

   # This is a Lambda function config associated with the source code: put-item.js
   srdReviewsPutItemFunction:
      Type: AWS::Serverless::Function
      Properties:
         Handler: src/handlers/srd-reviews-put-item.putItemHandler
         Runtime: nodejs16.x
         Architectures:
            - x86_64
         MemorySize: 128
         Timeout: 100
         Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
         Policies:
            # Give Create/Read/Update/Delete Permissions to the ReviewsTable
            - DynamoDBCrudPolicy:
                 TableName: !Ref ReviewsTable
            - SNSPublishMessagePolicy:
                 TopicName: !GetAtt srdReviewsSNSTopic.TopicName
         Environment:
            Variables:
               # Make table name accessible as environment variable from function code during execution
               SAMPLE_TABLE: !Ref ReviewsTable
         Events:
            Api:
               Type: Api
               Properties:
                  Path: /
                  Method: POST
   # Simple syntax to create a DynamoDB table with a single attribute primary key, more in
   # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable

   # DynamoDB table to store item: {id: &lt;ID&gt;, name: &lt;NAME&gt;}
   ReviewsTable:
      Type: AWS::Serverless::SimpleTable
      Properties:
         PrimaryKey:
            Name: id
            Type: String
         ProvisionedThroughput:
            ReadCapacityUnits: 2
            WriteCapacityUnits: 2

      ######## SNS #########
   srdReviewsSNSTopic:
      Type: "AWS::SNS::Topic"
      Properties:
         TopicName: "srd-reviews-topic"
   srdReviewsSNSTopicPolicy:
      Type: "AWS::SNS::TopicPolicy"
      Properties:
         PolicyDocument:
            Id: "srd-reviews-topic"
            Version: "2012-10-17"
            Statement:
               - Sid: "srd-reviews-topic-notifications"
                 Effect: Allow
                 Principal:
                    Service:
                       - "cloudwatch.amazonaws.com"
                       - "cloudtrail.amazonaws.com"
                 Action: "sns:Publish"
                 Resource: !Ref srdReviewsSNSTopic
         Topics:
            - !Ref srdReviewsSNSTopic

Outputs:
   WebEndpoint:
      Description: "API Gateway endpoint URL for Prod stage"
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
